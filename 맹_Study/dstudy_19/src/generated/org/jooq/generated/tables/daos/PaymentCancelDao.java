/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.JPaymentCancel;
import org.jooq.generated.tables.pojos.PaymentCancel;
import org.jooq.generated.tables.records.PaymentCancelRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentCancelDao extends DAOImpl<PaymentCancelRecord, PaymentCancel, Long> {

    /**
     * Create a new PaymentCancelDao without any configuration
     */
    public PaymentCancelDao() {
        super(JPaymentCancel.PAYMENT_CANCEL, PaymentCancel.class);
    }

    /**
     * Create a new PaymentCancelDao with an attached configuration
     */
    public PaymentCancelDao(Configuration configuration) {
        super(JPaymentCancel.PAYMENT_CANCEL, PaymentCancel.class, configuration);
    }

    @Override
    public Long getId(PaymentCancel object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>cancel_amount BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PaymentCancel> fetchRangeOfJCancelAmount(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JPaymentCancel.PAYMENT_CANCEL.CANCEL_AMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cancel_amount IN (values)</code>
     */
    public List<PaymentCancel> fetchByJCancelAmount(Integer... values) {
        return fetch(JPaymentCancel.PAYMENT_CANCEL.CANCEL_AMOUNT, values);
    }

    /**
     * Fetch records that have <code>canceled_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PaymentCancel> fetchRangeOfJCanceledAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JPaymentCancel.PAYMENT_CANCEL.CANCELED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>canceled_at IN (values)</code>
     */
    public List<PaymentCancel> fetchByJCanceledAt(LocalDateTime... values) {
        return fetch(JPaymentCancel.PAYMENT_CANCEL.CANCELED_AT, values);
    }

    /**
     * Fetch records that have <code>create_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PaymentCancel> fetchRangeOfJCreateDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JPaymentCancel.PAYMENT_CANCEL.CREATE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_date IN (values)</code>
     */
    public List<PaymentCancel> fetchByJCreateDate(LocalDateTime... values) {
        return fetch(JPaymentCancel.PAYMENT_CANCEL.CREATE_DATE, values);
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PaymentCancel> fetchRangeOfJId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JPaymentCancel.PAYMENT_CANCEL.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<PaymentCancel> fetchByJId(Long... values) {
        return fetch(JPaymentCancel.PAYMENT_CANCEL.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public PaymentCancel fetchOneByJId(Long value) {
        return fetchOne(JPaymentCancel.PAYMENT_CANCEL.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<PaymentCancel> fetchOptionalByJId(Long value) {
        return fetchOptional(JPaymentCancel.PAYMENT_CANCEL.ID, value);
    }

    /**
     * Fetch records that have <code>modify_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PaymentCancel> fetchRangeOfJModifyDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JPaymentCancel.PAYMENT_CANCEL.MODIFY_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modify_date IN (values)</code>
     */
    public List<PaymentCancel> fetchByJModifyDate(LocalDateTime... values) {
        return fetch(JPaymentCancel.PAYMENT_CANCEL.MODIFY_DATE, values);
    }

    /**
     * Fetch records that have <code>payment_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PaymentCancel> fetchRangeOfJPaymentId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JPaymentCancel.PAYMENT_CANCEL.PAYMENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_id IN (values)</code>
     */
    public List<PaymentCancel> fetchByJPaymentId(Long... values) {
        return fetch(JPaymentCancel.PAYMENT_CANCEL.PAYMENT_ID, values);
    }

    /**
     * Fetch records that have <code>cancel_reason BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PaymentCancel> fetchRangeOfJCancelReason(String lowerInclusive, String upperInclusive) {
        return fetchRange(JPaymentCancel.PAYMENT_CANCEL.CANCEL_REASON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cancel_reason IN (values)</code>
     */
    public List<PaymentCancel> fetchByJCancelReason(String... values) {
        return fetch(JPaymentCancel.PAYMENT_CANCEL.CANCEL_REASON, values);
    }

    /**
     * Fetch records that have <code>transaction_key BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<PaymentCancel> fetchRangeOfJTransactionKey(String lowerInclusive, String upperInclusive) {
        return fetchRange(JPaymentCancel.PAYMENT_CANCEL.TRANSACTION_KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transaction_key IN (values)</code>
     */
    public List<PaymentCancel> fetchByJTransactionKey(String... values) {
        return fetch(JPaymentCancel.PAYMENT_CANCEL.TRANSACTION_KEY, values);
    }
}

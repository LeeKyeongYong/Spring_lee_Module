/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import org.jooq.Record1;
import org.jooq.generated.tables.JMessages;
import org.jooq.generated.tables.pojos.Messages;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessagesRecord extends UpdatableRecordImpl<MessagesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>msa.messages.message_id</code>.
     */
    public MessagesRecord setMessageId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>msa.messages.message_id</code>.
     */
    public Long getMessageId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>msa.messages.next_message_id</code>.
     */
    public MessagesRecord setNextMessageId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>msa.messages.next_message_id</code>.
     */
    public Long getNextMessageId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>msa.messages.message_text</code>.
     */
    public MessagesRecord setMessageText(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>msa.messages.message_text</code>.
     */
    public String getMessageText() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessagesRecord
     */
    public MessagesRecord() {
        super(JMessages.MESSAGES);
    }

    /**
     * Create a detached, initialised MessagesRecord
     */
    public MessagesRecord(Long messageId, Long nextMessageId, String messageText) {
        super(JMessages.MESSAGES);

        setMessageId(messageId);
        setNextMessageId(nextMessageId);
        setMessageText(messageText);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised MessagesRecord
     */
    public MessagesRecord(Messages value) {
        super(JMessages.MESSAGES);

        if (value != null) {
            setMessageId(value.getMessageId());
            setNextMessageId(value.getNextMessageId());
            setMessageText(value.getMessageText());
            resetChangedOnNotNull();
        }
    }
}

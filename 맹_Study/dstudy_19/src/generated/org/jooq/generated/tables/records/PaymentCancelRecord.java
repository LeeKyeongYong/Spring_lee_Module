/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.JPaymentCancel;
import org.jooq.generated.tables.pojos.PaymentCancel;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentCancelRecord extends UpdatableRecordImpl<PaymentCancelRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>msa.payment_cancel.cancel_amount</code>.
     */
    public PaymentCancelRecord setCancelAmount(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>msa.payment_cancel.cancel_amount</code>.
     */
    public Integer getCancelAmount() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>msa.payment_cancel.canceled_at</code>.
     */
    public PaymentCancelRecord setCanceledAt(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>msa.payment_cancel.canceled_at</code>.
     */
    public LocalDateTime getCanceledAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>msa.payment_cancel.create_date</code>.
     */
    public PaymentCancelRecord setCreateDate(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>msa.payment_cancel.create_date</code>.
     */
    public LocalDateTime getCreateDate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>msa.payment_cancel.id</code>.
     */
    public PaymentCancelRecord setId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>msa.payment_cancel.id</code>.
     */
    public Long getId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>msa.payment_cancel.modify_date</code>.
     */
    public PaymentCancelRecord setModifyDate(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>msa.payment_cancel.modify_date</code>.
     */
    public LocalDateTime getModifyDate() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>msa.payment_cancel.payment_id</code>.
     */
    public PaymentCancelRecord setPaymentId(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>msa.payment_cancel.payment_id</code>.
     */
    public Long getPaymentId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>msa.payment_cancel.cancel_reason</code>.
     */
    public PaymentCancelRecord setCancelReason(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>msa.payment_cancel.cancel_reason</code>.
     */
    public String getCancelReason() {
        return (String) get(6);
    }

    /**
     * Setter for <code>msa.payment_cancel.transaction_key</code>.
     */
    public PaymentCancelRecord setTransactionKey(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>msa.payment_cancel.transaction_key</code>.
     */
    public String getTransactionKey() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PaymentCancelRecord
     */
    public PaymentCancelRecord() {
        super(JPaymentCancel.PAYMENT_CANCEL);
    }

    /**
     * Create a detached, initialised PaymentCancelRecord
     */
    public PaymentCancelRecord(Integer cancelAmount, LocalDateTime canceledAt, LocalDateTime createDate, Long id, LocalDateTime modifyDate, Long paymentId, String cancelReason, String transactionKey) {
        super(JPaymentCancel.PAYMENT_CANCEL);

        setCancelAmount(cancelAmount);
        setCanceledAt(canceledAt);
        setCreateDate(createDate);
        setId(id);
        setModifyDate(modifyDate);
        setPaymentId(paymentId);
        setCancelReason(cancelReason);
        setTransactionKey(transactionKey);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PaymentCancelRecord
     */
    public PaymentCancelRecord(PaymentCancel value) {
        super(JPaymentCancel.PAYMENT_CANCEL);

        if (value != null) {
            setCancelAmount(value.getCancelAmount());
            setCanceledAt(value.getCanceledAt());
            setCreateDate(value.getCreateDate());
            setId(value.getId());
            setModifyDate(value.getModifyDate());
            setPaymentId(value.getPaymentId());
            setCancelReason(value.getCancelReason());
            setTransactionKey(value.getTransactionKey());
            resetChangedOnNotNull();
        }
    }
}

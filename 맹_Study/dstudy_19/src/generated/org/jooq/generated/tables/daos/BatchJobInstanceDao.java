/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.JBatchJobInstance;
import org.jooq.generated.tables.pojos.BatchJobInstance;
import org.jooq.generated.tables.records.BatchJobInstanceRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BatchJobInstanceDao extends DAOImpl<BatchJobInstanceRecord, BatchJobInstance, Long> {

    /**
     * Create a new BatchJobInstanceDao without any configuration
     */
    public BatchJobInstanceDao() {
        super(JBatchJobInstance.BATCH_JOB_INSTANCE, BatchJobInstance.class);
    }

    /**
     * Create a new BatchJobInstanceDao with an attached configuration
     */
    public BatchJobInstanceDao(Configuration configuration) {
        super(JBatchJobInstance.BATCH_JOB_INSTANCE, BatchJobInstance.class, configuration);
    }

    @Override
    public Long getId(BatchJobInstance object) {
        return object.getJobInstanceId();
    }

    /**
     * Fetch records that have <code>JOB_INSTANCE_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<BatchJobInstance> fetchRangeOfJJobInstanceId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JBatchJobInstance.BATCH_JOB_INSTANCE.JOB_INSTANCE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>JOB_INSTANCE_ID IN (values)</code>
     */
    public List<BatchJobInstance> fetchByJJobInstanceId(Long... values) {
        return fetch(JBatchJobInstance.BATCH_JOB_INSTANCE.JOB_INSTANCE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>JOB_INSTANCE_ID = value</code>
     */
    public BatchJobInstance fetchOneByJJobInstanceId(Long value) {
        return fetchOne(JBatchJobInstance.BATCH_JOB_INSTANCE.JOB_INSTANCE_ID, value);
    }

    /**
     * Fetch a unique record that has <code>JOB_INSTANCE_ID = value</code>
     */
    public Optional<BatchJobInstance> fetchOptionalByJJobInstanceId(Long value) {
        return fetchOptional(JBatchJobInstance.BATCH_JOB_INSTANCE.JOB_INSTANCE_ID, value);
    }

    /**
     * Fetch records that have <code>VERSION BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<BatchJobInstance> fetchRangeOfJVersion(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JBatchJobInstance.BATCH_JOB_INSTANCE.VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>VERSION IN (values)</code>
     */
    public List<BatchJobInstance> fetchByJVersion(Long... values) {
        return fetch(JBatchJobInstance.BATCH_JOB_INSTANCE.VERSION, values);
    }

    /**
     * Fetch records that have <code>JOB_NAME BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<BatchJobInstance> fetchRangeOfJJobName(String lowerInclusive, String upperInclusive) {
        return fetchRange(JBatchJobInstance.BATCH_JOB_INSTANCE.JOB_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>JOB_NAME IN (values)</code>
     */
    public List<BatchJobInstance> fetchByJJobName(String... values) {
        return fetch(JBatchJobInstance.BATCH_JOB_INSTANCE.JOB_NAME, values);
    }

    /**
     * Fetch records that have <code>JOB_KEY BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<BatchJobInstance> fetchRangeOfJJobKey(String lowerInclusive, String upperInclusive) {
        return fetchRange(JBatchJobInstance.BATCH_JOB_INSTANCE.JOB_KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>JOB_KEY IN (values)</code>
     */
    public List<BatchJobInstance> fetchByJJobKey(String... values) {
        return fetch(JBatchJobInstance.BATCH_JOB_INSTANCE.JOB_KEY, values);
    }
}

/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.JBillingDetails;
import org.jooq.generated.tables.pojos.BillingDetails;
import org.jooq.generated.tables.records.BillingDetailsRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BillingDetailsDao extends DAOImpl<BillingDetailsRecord, BillingDetails, Long> {

    /**
     * Create a new BillingDetailsDao without any configuration
     */
    public BillingDetailsDao() {
        super(JBillingDetails.BILLING_DETAILS, BillingDetails.class);
    }

    /**
     * Create a new BillingDetailsDao with an attached configuration
     */
    public BillingDetailsDao(Configuration configuration) {
        super(JBillingDetails.BILLING_DETAILS, BillingDetails.class, configuration);
    }

    @Override
    public Long getId(BillingDetails object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<BillingDetails> fetchRangeOfJId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JBillingDetails.BILLING_DETAILS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<BillingDetails> fetchByJId(Long... values) {
        return fetch(JBillingDetails.BILLING_DETAILS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public BillingDetails fetchOneByJId(Long value) {
        return fetchOne(JBillingDetails.BILLING_DETAILS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<BillingDetails> fetchOptionalByJId(Long value) {
        return fetchOptional(JBillingDetails.BILLING_DETAILS.ID, value);
    }

    /**
     * Fetch records that have <code>owner BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<BillingDetails> fetchRangeOfJOwner(String lowerInclusive, String upperInclusive) {
        return fetchRange(JBillingDetails.BILLING_DETAILS.OWNER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>owner IN (values)</code>
     */
    public List<BillingDetails> fetchByJOwner(String... values) {
        return fetch(JBillingDetails.BILLING_DETAILS.OWNER, values);
    }

    /**
     * Fetch records that have <code>billing_type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<BillingDetails> fetchRangeOfJBillingType(String lowerInclusive, String upperInclusive) {
        return fetchRange(JBillingDetails.BILLING_DETAILS.BILLING_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>billing_type IN (values)</code>
     */
    public List<BillingDetails> fetchByJBillingType(String... values) {
        return fetch(JBillingDetails.BILLING_DETAILS.BILLING_TYPE, values);
    }
}

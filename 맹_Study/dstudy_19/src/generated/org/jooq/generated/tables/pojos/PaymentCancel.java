/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentCancel implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer cancelAmount;
    private LocalDateTime canceledAt;
    private LocalDateTime createDate;
    private Long id;
    private LocalDateTime modifyDate;
    private Long paymentId;
    private String cancelReason;
    private String transactionKey;

    public PaymentCancel() {}

    public PaymentCancel(PaymentCancel value) {
        this.cancelAmount = value.cancelAmount;
        this.canceledAt = value.canceledAt;
        this.createDate = value.createDate;
        this.id = value.id;
        this.modifyDate = value.modifyDate;
        this.paymentId = value.paymentId;
        this.cancelReason = value.cancelReason;
        this.transactionKey = value.transactionKey;
    }

    public PaymentCancel(
        Integer cancelAmount,
        LocalDateTime canceledAt,
        LocalDateTime createDate,
        Long id,
        LocalDateTime modifyDate,
        Long paymentId,
        String cancelReason,
        String transactionKey
    ) {
        this.cancelAmount = cancelAmount;
        this.canceledAt = canceledAt;
        this.createDate = createDate;
        this.id = id;
        this.modifyDate = modifyDate;
        this.paymentId = paymentId;
        this.cancelReason = cancelReason;
        this.transactionKey = transactionKey;
    }

    /**
     * Getter for <code>msa.payment_cancel.cancel_amount</code>.
     */
    public Integer getCancelAmount() {
        return this.cancelAmount;
    }

    /**
     * Setter for <code>msa.payment_cancel.cancel_amount</code>.
     */
    public PaymentCancel setCancelAmount(Integer cancelAmount) {
        this.cancelAmount = cancelAmount;
        return this;
    }

    /**
     * Getter for <code>msa.payment_cancel.canceled_at</code>.
     */
    public LocalDateTime getCanceledAt() {
        return this.canceledAt;
    }

    /**
     * Setter for <code>msa.payment_cancel.canceled_at</code>.
     */
    public PaymentCancel setCanceledAt(LocalDateTime canceledAt) {
        this.canceledAt = canceledAt;
        return this;
    }

    /**
     * Getter for <code>msa.payment_cancel.create_date</code>.
     */
    public LocalDateTime getCreateDate() {
        return this.createDate;
    }

    /**
     * Setter for <code>msa.payment_cancel.create_date</code>.
     */
    public PaymentCancel setCreateDate(LocalDateTime createDate) {
        this.createDate = createDate;
        return this;
    }

    /**
     * Getter for <code>msa.payment_cancel.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>msa.payment_cancel.id</code>.
     */
    public PaymentCancel setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>msa.payment_cancel.modify_date</code>.
     */
    public LocalDateTime getModifyDate() {
        return this.modifyDate;
    }

    /**
     * Setter for <code>msa.payment_cancel.modify_date</code>.
     */
    public PaymentCancel setModifyDate(LocalDateTime modifyDate) {
        this.modifyDate = modifyDate;
        return this;
    }

    /**
     * Getter for <code>msa.payment_cancel.payment_id</code>.
     */
    public Long getPaymentId() {
        return this.paymentId;
    }

    /**
     * Setter for <code>msa.payment_cancel.payment_id</code>.
     */
    public PaymentCancel setPaymentId(Long paymentId) {
        this.paymentId = paymentId;
        return this;
    }

    /**
     * Getter for <code>msa.payment_cancel.cancel_reason</code>.
     */
    public String getCancelReason() {
        return this.cancelReason;
    }

    /**
     * Setter for <code>msa.payment_cancel.cancel_reason</code>.
     */
    public PaymentCancel setCancelReason(String cancelReason) {
        this.cancelReason = cancelReason;
        return this;
    }

    /**
     * Getter for <code>msa.payment_cancel.transaction_key</code>.
     */
    public String getTransactionKey() {
        return this.transactionKey;
    }

    /**
     * Setter for <code>msa.payment_cancel.transaction_key</code>.
     */
    public PaymentCancel setTransactionKey(String transactionKey) {
        this.transactionKey = transactionKey;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PaymentCancel other = (PaymentCancel) obj;
        if (this.cancelAmount == null) {
            if (other.cancelAmount != null)
                return false;
        }
        else if (!this.cancelAmount.equals(other.cancelAmount))
            return false;
        if (this.canceledAt == null) {
            if (other.canceledAt != null)
                return false;
        }
        else if (!this.canceledAt.equals(other.canceledAt))
            return false;
        if (this.createDate == null) {
            if (other.createDate != null)
                return false;
        }
        else if (!this.createDate.equals(other.createDate))
            return false;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.modifyDate == null) {
            if (other.modifyDate != null)
                return false;
        }
        else if (!this.modifyDate.equals(other.modifyDate))
            return false;
        if (this.paymentId == null) {
            if (other.paymentId != null)
                return false;
        }
        else if (!this.paymentId.equals(other.paymentId))
            return false;
        if (this.cancelReason == null) {
            if (other.cancelReason != null)
                return false;
        }
        else if (!this.cancelReason.equals(other.cancelReason))
            return false;
        if (this.transactionKey == null) {
            if (other.transactionKey != null)
                return false;
        }
        else if (!this.transactionKey.equals(other.transactionKey))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.cancelAmount == null) ? 0 : this.cancelAmount.hashCode());
        result = prime * result + ((this.canceledAt == null) ? 0 : this.canceledAt.hashCode());
        result = prime * result + ((this.createDate == null) ? 0 : this.createDate.hashCode());
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.modifyDate == null) ? 0 : this.modifyDate.hashCode());
        result = prime * result + ((this.paymentId == null) ? 0 : this.paymentId.hashCode());
        result = prime * result + ((this.cancelReason == null) ? 0 : this.cancelReason.hashCode());
        result = prime * result + ((this.transactionKey == null) ? 0 : this.transactionKey.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PaymentCancel (");

        sb.append(cancelAmount);
        sb.append(", ").append(canceledAt);
        sb.append(", ").append(createDate);
        sb.append(", ").append(id);
        sb.append(", ").append(modifyDate);
        sb.append(", ").append(paymentId);
        sb.append(", ").append(cancelReason);
        sb.append(", ").append(transactionKey);

        sb.append(")");
        return sb.toString();
    }
}

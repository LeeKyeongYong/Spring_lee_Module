/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.enums.KstudyFilesStatus;
import org.jooq.generated.tables.JKstudyFiles;
import org.jooq.generated.tables.pojos.KstudyFiles;
import org.jooq.generated.tables.records.KstudyFilesRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KstudyFilesDao extends DAOImpl<KstudyFilesRecord, KstudyFiles, Long> {

    /**
     * Create a new KstudyFilesDao without any configuration
     */
    public KstudyFilesDao() {
        super(JKstudyFiles.KSTUDY_FILES, KstudyFiles.class);
    }

    /**
     * Create a new KstudyFilesDao with an attached configuration
     */
    public KstudyFilesDao(Configuration configuration) {
        super(JKstudyFiles.KSTUDY_FILES, KstudyFiles.class, configuration);
    }

    @Override
    public Long getId(KstudyFiles object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>author_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KstudyFiles> fetchRangeOfJAuthorId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JKstudyFiles.KSTUDY_FILES.AUTHOR_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>author_id IN (values)</code>
     */
    public List<KstudyFiles> fetchByJAuthorId(Long... values) {
        return fetch(JKstudyFiles.KSTUDY_FILES.AUTHOR_ID, values);
    }

    /**
     * Fetch records that have <code>create_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KstudyFiles> fetchRangeOfJCreateDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JKstudyFiles.KSTUDY_FILES.CREATE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_date IN (values)</code>
     */
    public List<KstudyFiles> fetchByJCreateDate(LocalDateTime... values) {
        return fetch(JKstudyFiles.KSTUDY_FILES.CREATE_DATE, values);
    }

    /**
     * Fetch records that have <code>file_size BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KstudyFiles> fetchRangeOfJFileSize(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JKstudyFiles.KSTUDY_FILES.FILE_SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>file_size IN (values)</code>
     */
    public List<KstudyFiles> fetchByJFileSize(Long... values) {
        return fetch(JKstudyFiles.KSTUDY_FILES.FILE_SIZE, values);
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KstudyFiles> fetchRangeOfJId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JKstudyFiles.KSTUDY_FILES.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<KstudyFiles> fetchByJId(Long... values) {
        return fetch(JKstudyFiles.KSTUDY_FILES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public KstudyFiles fetchOneByJId(Long value) {
        return fetchOne(JKstudyFiles.KSTUDY_FILES.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<KstudyFiles> fetchOptionalByJId(Long value) {
        return fetchOptional(JKstudyFiles.KSTUDY_FILES.ID, value);
    }

    /**
     * Fetch records that have <code>modify_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KstudyFiles> fetchRangeOfJModifyDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JKstudyFiles.KSTUDY_FILES.MODIFY_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modify_date IN (values)</code>
     */
    public List<KstudyFiles> fetchByJModifyDate(LocalDateTime... values) {
        return fetch(JKstudyFiles.KSTUDY_FILES.MODIFY_DATE, values);
    }

    /**
     * Fetch records that have <code>checksum BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KstudyFiles> fetchRangeOfJChecksum(String lowerInclusive, String upperInclusive) {
        return fetchRange(JKstudyFiles.KSTUDY_FILES.CHECKSUM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>checksum IN (values)</code>
     */
    public List<KstudyFiles> fetchByJChecksum(String... values) {
        return fetch(JKstudyFiles.KSTUDY_FILES.CHECKSUM, values);
    }

    /**
     * Fetch records that have <code>content_type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KstudyFiles> fetchRangeOfJContentType(String lowerInclusive, String upperInclusive) {
        return fetchRange(JKstudyFiles.KSTUDY_FILES.CONTENT_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>content_type IN (values)</code>
     */
    public List<KstudyFiles> fetchByJContentType(String... values) {
        return fetch(JKstudyFiles.KSTUDY_FILES.CONTENT_TYPE, values);
    }

    /**
     * Fetch records that have <code>file_path BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KstudyFiles> fetchRangeOfJFilePath(String lowerInclusive, String upperInclusive) {
        return fetchRange(JKstudyFiles.KSTUDY_FILES.FILE_PATH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>file_path IN (values)</code>
     */
    public List<KstudyFiles> fetchByJFilePath(String... values) {
        return fetch(JKstudyFiles.KSTUDY_FILES.FILE_PATH, values);
    }

    /**
     * Fetch records that have <code>file_type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KstudyFiles> fetchRangeOfJFileType(String lowerInclusive, String upperInclusive) {
        return fetchRange(JKstudyFiles.KSTUDY_FILES.FILE_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>file_type IN (values)</code>
     */
    public List<KstudyFiles> fetchByJFileType(String... values) {
        return fetch(JKstudyFiles.KSTUDY_FILES.FILE_TYPE, values);
    }

    /**
     * Fetch records that have <code>original_file_name BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<KstudyFiles> fetchRangeOfJOriginalFileName(String lowerInclusive, String upperInclusive) {
        return fetchRange(JKstudyFiles.KSTUDY_FILES.ORIGINAL_FILE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>original_file_name IN (values)</code>
     */
    public List<KstudyFiles> fetchByJOriginalFileName(String... values) {
        return fetch(JKstudyFiles.KSTUDY_FILES.ORIGINAL_FILE_NAME, values);
    }

    /**
     * Fetch records that have <code>stored_file_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KstudyFiles> fetchRangeOfJStoredFileName(String lowerInclusive, String upperInclusive) {
        return fetchRange(JKstudyFiles.KSTUDY_FILES.STORED_FILE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>stored_file_name IN (values)</code>
     */
    public List<KstudyFiles> fetchByJStoredFileName(String... values) {
        return fetch(JKstudyFiles.KSTUDY_FILES.STORED_FILE_NAME, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KstudyFiles> fetchRangeOfJStatus(KstudyFilesStatus lowerInclusive, KstudyFilesStatus upperInclusive) {
        return fetchRange(JKstudyFiles.KSTUDY_FILES.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<KstudyFiles> fetchByJStatus(KstudyFilesStatus... values) {
        return fetch(JKstudyFiles.KSTUDY_FILES.STATUS, values);
    }
}

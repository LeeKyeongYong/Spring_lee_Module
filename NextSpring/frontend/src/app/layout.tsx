import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ClientLayout from "./ClientLayout";
import client from "@/lib/backend/client";
import { cookies } from "next/headers";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
    const response = await client.GET("/api/v1/members/me", {
        headers: {
            cookie: (await cookies()).toString(),
        },
    });

    const me = response.data
        ? response.data
        : {
            id: 0,
            createDate: "",
            modifyDate: "",
            nickname: "",
        };

  return (
    <html lang="ko">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased flex flex-col min-h-[100dvh] border-[5px]`}
      >
      <ClientLayout me={me}>{children}</ClientLayout>
      </body>
    </html>
  );
}
